schema {
    query: Query
    mutation: Mutation
}

type Query {
    issues(projectId: Int, offset: Int, limit: Int): [Issue]
    issue(id: Int): Issue
    comments(id: Int): [Comment]
    users(projectId: Int): [User]
}

type Mutation {
    addComment(issueId: Int, commentText: String): MutationResult
    updateSingleIssue(id: Int, title: String, content: String): MutationResult
}

enum MutationResult {
    SUCCESS,
    FAILURE,
    PERMISSION_DENIED
}

scalar Date

type Comment {
    id: Int,
    comment: String,
    createdBy: String,
    createdAt: String
}

type Issue {
    id: ID
    title: String
    description: String
    status: Int
    updated: String
    created: String
}

type User {
    email: String
    name: String
    id: ID
}

input HelloInput {
    firstName: String!
    lastName: String
}